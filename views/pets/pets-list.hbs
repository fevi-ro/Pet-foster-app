<main class="wrapper">
<div class="container">

 <h1>All Pets available for adoption</h1>

<div class="filter">
 
   <form method="GET" action="/pets" >
   <label> Animal:</label>
    <select name="animal">
      {{#each animals}}
        <option >{{this}}</option>
      {{/each}}
      </select>
{{!-- 
     
      <select name= "gender"> 
      {{#each  pets}}
      <option value="{{this.gender}}">{{this.gender}}</option>
      {{/each}}
      </select> --}}

       {{!-- 
    <select name="location">
      {{#each pets}}
        <option value="{{this.location}}">{{this.location}}</option>
      {{/each}}
      </select> --}}
   <label for="gender">Gender</label>
 <input type="text" name="gender" placeholder="female"> </input>
 <label> Location:</label>
      <input type="text" name="location" placeholder="Berlin"> </input>

    
      <button class="btn-filter" type="submit">Search</button>
    </form>
</div>



    <section class="columns">
      {{!-- {{#grouped_each 3 pets}} --}}
<div class="card">
 {{#each pets}}
 <h2>{{this.name}}</h2>
<img src="{{this.image}}" alt="Pet image">


<div class="pet-info">
 <i class="material-icons">pets</i><h3>{{this.animal}}</h3>
 <i class="material-icons">home</i> <h3> {{this.user.location}}</h3>
<i class="material-icons">cake</i><h3> {{this.dateOfBirth}}</h3>
</div>
<div class="pet-info2"><p>Gender: {{this.gender}}</p>
 <p>Foster: {{this.user.name}}</p>
 <p>Team: {{this.user.team}}</p>
<button><a href="/pets/{{this._id}}">See details</a> {{!-- link that points to the details page --}}</button> <br>
</div>
 {{/each}}

</div>
{{!-- {{/grouped_each}} --}}
</section>
</div>
</main>



{{!-- <script>
  //register new handlebars function
function hbsHelpers(hbs){
  hbs.registerHelper('grouped_each', function(every, context, options) {
    var out = "", subcontext = [], i;
    if (context && context.length > 0) {
        for (i = 0; i < context.length; i++) {
            if (i > 0 && i % every === 0) {
                out += options.fn(subcontext);
                subcontext = [];
            }
            subcontext.push(context[i]);
        }
        out += options.fn(subcontext);
    }
    return out;
  });
  }
  
  
  module.exports = hbsHelpers;

</script> --}}